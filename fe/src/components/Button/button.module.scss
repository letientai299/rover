.button {
  border-radius: var(--rounded-md);
  margin: 0;
  box-sizing: content-box;
  display: inline-flex;
  font-size: 1em;
  align-items: center;
  gap: var(--gap-sm);
  padding: var(--padding-sm);
  white-space: nowrap;
  background: none;
  border: var(--sizes-0-1) solid transparent;
  outline-offset: var(--sizes-0-1);
  outline-width: var(--sizes-0-5);

  & svg {
    font-size: 1.2em;
  }
}

.unfilled {
  --border: var(--colors-border-clear);
  --focus-bg: var(--colors-neutral-focus-bg);
  --hover-bg: var(--colors-neutral-hover-bg);
  --active-bg: var(--colors-neutral-active-bg);
  --outline: var(--colors-outline);

  /* kinds: change variable  */

  &[data-kind='primary'] {
    --fg: var(--colors-primary);
    --border: var(--fg);
    --fg-accessible: var(--colors-primary-accessible);
    --focus-bg: var(--colors-primary-focus-bg);
    --hover-bg: var(--colors-primary-hover-bg);
    --active-bg: var(--colors-primary-active-bg);
  }

  &[data-kind='danger'] {
    --outline: var(--colors-outline-danger);
    --fg: var(--colors-danger);
    --border: var(--fg);
    --fg-accessible: var(--colors-danger-accessible);
    --focus-bg: var(--colors-danger-focus-bg);
    --hover-bg: var(--colors-danger-hover-bg);
    --active-bg: var(--colors-danger-active-bg);
  }

  /* interactive states: apply color and styles change depends on the variants */

  &:disabled {
    &[data-variant='outline'] {
      border-color: var(--border);
    }
  }

  &:not(:disabled) {
    color: var(--fg);

    &:is(:hover, [data-hover]) {
      background: var(--hover-bg);
    }

    &:is(:focus, [data-focus]) {
      outline-style: solid;
      outline-color: var(--outline);
    }

    &:is(:active, [data-active]) {
      background: var(--active-bg);
      outline-color: var(--outline);
    }

    &[data-variant='outline'] {
      color: var(--fg);
      border-color: var(--border);
    }
  }
}

.filled {
  --bg: var(--colors-neutral-accessible);
  --border: var(--colors-neutral-active-bg);
  --hover-bg: var(--colors-neutral-filled-hover-bg);
  --focus-bg: var(--colors-neutral-filled-focus-bg);
  --active-bg: var(--colors-neutral-filled-active-bg);
  --outline: var(--colors-outline);

  &[data-kind='primary'] {
    --fg: #e0e0e0;
    --bg: var(--colors-primary);
    --border: var(--colors-primary);
    --hover-bg: var(--colors-primary-filled-hover-bg);
    --focus-bg: var(--colors-primary-filled-focus-bg);
    --active-bg: var(--colors-primary-filled-active-bg);
  }

  &[data-kind='danger'] {
    --bg: var(--colors-danger);
    --fg: white;
    --border: var(--colors-danger-active-bg);
    --hover-bg: var(--colors-danger-filled-hover-bg);
    --focus-bg: var(--colors-danger-filled-focus-bg);
    --active-bg: var(--colors-danger-filled-active-bg);
    --outline: var(--colors-outline-danger);
  }

  background-color: var(--bg);
  border-color: var(--border);

  &:disabled {
    &[data-variant='outline'] {
      border-color: var(--border);
    }

    &[data-variant='filled'] {
      border-color: var(--border);
      color: #a0a0a0;
    }
  }

  &:not(:disabled) {
    background: var(--bg);
    border-color: var(--border);
    color: var(--fg);

    &:is(:hover, [data-hover]) {
      background: var(--hover-bg);
      color: white;
    }

    &:is(:focus, [data-focus]) {
      outline-style: solid;
      outline-color: var(--outline);
      background: var(--focus-bg);
      color: white;
    }

    &:is(:active, [data-active]) {
      background: var(--active-bg);
      outline-color: var(--outline);
      color: var(--colors-primary-active-bg);
    }

    &[data-variant='outline'] {
      border-color: var(--border);
    }
  }
}

.icon-button {
  aspect-ratio: 1/1;
}
